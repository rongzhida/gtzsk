
/*
 * 
 */

package cn.gov.laho.gzfgoa.flow.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.10
 * Fri Nov 07 16:59:04 CST 2014
 * Generated source version: 2.2.10
 * 
 */


@WebServiceClient(name = "ProcInfoService", 
                  wsdlLocation = "http://172.30.242.137:7007/fgoa/services/ProcInfoService?wsdl",
                  targetNamespace = "http://webservice.flow.gzfg.kwhope.com") 
public class ProcInfoService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://webservice.flow.gzfg.kwhope.com", "ProcInfoService");
    public final static QName ProcInfoServiceHttpPort = new QName("http://webservice.flow.gzfg.kwhope.com", "ProcInfoServiceHttpPort");
    static {
        URL url = null;
        try {
            url = new URL("http://172.30.242.137:7007/fgoa/services/ProcInfoService?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://172.30.242.137:7007/fgoa/services/ProcInfoService?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ProcInfoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ProcInfoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProcInfoService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns ProcInfoServicePortType
     */
    @WebEndpoint(name = "ProcInfoServiceHttpPort")
    public ProcInfoServicePortType getProcInfoServiceHttpPort() {
        return super.getPort(ProcInfoServiceHttpPort, ProcInfoServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProcInfoServicePortType
     */
    @WebEndpoint(name = "ProcInfoServiceHttpPort")
    public ProcInfoServicePortType getProcInfoServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(ProcInfoServiceHttpPort, ProcInfoServicePortType.class, features);
    }

}
