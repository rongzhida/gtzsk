
/*
 * 
 */

package cn.gov.laho.fgk.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.10
 * Fri Nov 07 16:38:38 CST 2014
 * Generated source version: 2.2.10
 * 
 */


@WebServiceClient(name = "searchService", 
                  wsdlLocation = "http://172.30.242.131:8080/fgk/services/searchService?wsdl",
                  targetNamespace = "http://webservice.fgk.com") 
public class SearchService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://webservice.fgk.com", "searchService");
    public final static QName SearchServiceHttpEndpoint = new QName("http://webservice.fgk.com", "searchServiceHttpEndpoint");
    public final static QName SearchServiceHttpSoap12Endpoint = new QName("http://webservice.fgk.com", "searchServiceHttpSoap12Endpoint");
    public final static QName SearchServiceHttpSoap11Endpoint = new QName("http://webservice.fgk.com", "searchServiceHttpSoap11Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://172.30.242.131:8080/fgk/services/searchService?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://172.30.242.131:8080/fgk/services/searchService?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public SearchService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SearchService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SearchService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns SearchServicePortType
     */
    @WebEndpoint(name = "searchServiceHttpEndpoint")
    public SearchServicePortType getSearchServiceHttpEndpoint() {
        return super.getPort(SearchServiceHttpEndpoint, SearchServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SearchServicePortType
     */
    @WebEndpoint(name = "searchServiceHttpEndpoint")
    public SearchServicePortType getSearchServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(SearchServiceHttpEndpoint, SearchServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns SearchServicePortType
     */
    @WebEndpoint(name = "searchServiceHttpSoap12Endpoint")
    public SearchServicePortType getSearchServiceHttpSoap12Endpoint() {
        return super.getPort(SearchServiceHttpSoap12Endpoint, SearchServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SearchServicePortType
     */
    @WebEndpoint(name = "searchServiceHttpSoap12Endpoint")
    public SearchServicePortType getSearchServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(SearchServiceHttpSoap12Endpoint, SearchServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns SearchServicePortType
     */
    @WebEndpoint(name = "searchServiceHttpSoap11Endpoint")
    public SearchServicePortType getSearchServiceHttpSoap11Endpoint() {
        return super.getPort(SearchServiceHttpSoap11Endpoint, SearchServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SearchServicePortType
     */
    @WebEndpoint(name = "searchServiceHttpSoap11Endpoint")
    public SearchServicePortType getSearchServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(SearchServiceHttpSoap11Endpoint, SearchServicePortType.class, features);
    }

}
